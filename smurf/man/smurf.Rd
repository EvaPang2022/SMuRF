% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smurf.R
\name{smurf}
\alias{smurf}
\title{SMuRF v1.6}
\usage{
smurf(directory = NULL, model = NULL, nthreads = -1,
  save.files = F, output.dir = NULL, parse.dir = NULL,
  roi.dir = NULL, snv.cutoff = "default", indel.cutoff = "default",
  t.label = "-T", build = "hg19", change.build = F,
  check.packages = T)
}
\arguments{
\item{directory}{Choose directory where the files Variant Caller Format(VCF) files are located. 
Alternatively, provide a list object containing the path to the 4 VCF files labelled: mutect, freebayes, vardict and varscan.}

\item{model}{Choose "combined", "cdsannotation", "featureselectionall", "newcutoff.cdsannotation" or "ROI".
The appropriate parsing and prediction model will be performed
to obtain a list of somatic mutation calls. 

Choose "combined" to generate both SNV and Indel outputs

Choose "cdsannotation" to run "combined" + add annotations to coding regions (from the respective coding transcripts)

To change the cutoffs for completed/existing SMuRF output, select "newcutoff.cdsannotation".

To obtain variants of a specific region, use "ROI" and provide the .BED file of genomic coordinates.

Debug mode: Choose "featureselectionall" to parse the VCF files only.}

\item{nthreads}{Default as "-1", where all available cores will be used for RandomForest prediction. 
Specify any integer from 1 to x, depending on your resources available.
For 32-bit Windows, only 1 core is allowed (nthreads=1).}

\item{save.files}{Select save.files=T to save the SMuRF output as .txt files in your specified output.dir. 
Default save.files=F, SMuRF output is available as a list object in R.}

\item{output.dir}{Path to output directory}

\item{parse.dir}{Path to the location of existing snv-parse.txt and indel-parse.txt files generated by SMuRF (following this format). 
This setting is available for model="newcutoff.cdsannotation".}

\item{roi.dir}{Path to the location of a .BED or .txt file with regions-of-interest.
This setting is available for model="ROI".}

\item{snv.cutoff}{Default SNV model cutoff, unless a number between 0 to 1 is stated.}

\item{indel.cutoff}{Default indel model cutoff, unless a number between 0 to 1 is stated.}

\item{t.label}{Default as "-T" to identify your tumour sample (from your normal sample). 
If your tumour BAM file is named "SampleA_tumour", set t.label = "_tumour".}

\item{build}{Default genome build='hg19'. Set to "hg38" for GRCh38 build. 
This setting affects the gene annotation but not the SMuRF predictions for SNVs and indels.}

\item{change.build}{For conversion of your genomic coordinates.
change.build = 'hg19.to.hg38' or 'hg38.to.hg19'. 
Default option is disabled to retain your original 'build' specified above.}

\item{check.packages}{Default as 'TRUE'. For debug mode.}
}
\description{
Somatic mutation consensus calling based on four callers:
MuTect2, Freebayes, VarDict, VarScan
using a RandomForest model to consolidate a list of high accuracy calls.
}
\note{
Input files containing variant calls should be ".vcf.gz" format of each caller.
Supported for R (>=3.3.1), Java 7 or 8. For R (>=3.5.1), Java (7 up to 11 is supported).
}
\examples{
myresults = smurf(directory="/path/to/directory..",
                  model="combined", t.label='-TCGA-Tumor')

myresults = smurf(directory="/path/to/directory..",
                  model="cdsannotation",
                  save.files=T, output.dir="/path/to/output")

myresults = smurf(directory="/path/to/directory..",
                  model="newcutoff.cdsannotation",
                  nthreads = 4,
                  snv.cutoff = 0.2, indel.cutoff = 'default',
                  parse.dir="/path/to/parse/files/")

myresults = smurf(directory="/path/to/directory..",
                  model="ROI",
                  roi.dir="/path/to/dir/roi.bed", build='hg38')

#Specify directories manually
dir.list = list(mutect='/path/to/mutect.vcf.gz',
                freebayes='/path/to/freebayes.vcf.gz',
                vardict='/path/to/vardict.vcf.gz',
                varscan='/path/to/varscan.vcf.gz')
                 
myresults = smurf(directory=dir.list, 
                  model="combined")
                                   
}
